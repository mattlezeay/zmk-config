/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q      &kp W      &kp E      &kp R      &kp T      &none              &none      &kp Y      &kp U      &kp I      &kp O       &kp P
                &kp A      &kp S      &kp D      &kp F      &kp G      &none              &none      &kp H      &kp J      &kp K      &kp L       &kp SEMI
                &kp Z      &kp X      &kp C      &kp V      &kp B      &kp BSPC           &kp SPACE  &kp N      &kp M      &kp COMMA  &kp QMARK   &kp FSLH
                &kp ESC    &kp TAB    &kp LCTRL  &mo 2      &kp LCMD   &none              &none      &kp RALT   &mo 1      &kp RSHFT  &kp SQT     &kp RET
            >;
        };

        blue_layer {
            bindings = <
                &kp LS(Q)  &kp LS(W)  &kp LS(E)  &kp LS(R)  &kp LS(T)  &none              &none      &kp LS(Y)  &kp LS(U)  &kp LS(I)  &kp LS(O)  &kp LS(P)
                &kp LS(A)  &kp LS(S)  &kp LS(D)  &kp LS(F)  &kp LS(G)  &none              &none      &kp LS(H)  &kp LS(J)  &kp LS(K)  &kp LS(L)  &kp COLON
                &kp LS(Z)  &kp LS(X)  &kp LS(C)  &kp LS(V)  &kp LS(B)  &kp BSPC           &kp SPACE  &kp LS(N)  &kp LS(M)  &kp DOT    &kp EXCL   &kp BSLH
                &trans     &trans     &trans     &mo 3      &trans     &none              &none      &trans     &trans     &trans     &kp DQT    &trans
            >;
        };

        red_layer {
            bindings = <
                &kp N1     &kp N2     &kp N3     &kp N4     &kp N5     &none              &none      &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
                &kp PLUS   &kp STAR   &kp UP     &kp CARET  &kp AMPS   &none              &none      &kp LT     &kp LPAR   &kp LBRC   &kp LBKT   &trans
                &kp GRAVE  &kp LEFT   &kp DOWN   &kp RIGHT  &kp DLLR   &trans             &trans     &kp EQUAL  &kp UNDER  &trans     &trans     &trans
                &trans     &trans     &trans     &trans     &trans     &none              &none      &trans     &mo 3      &trans     &trans     &trans
            >;
        };

        purple_layer {
            bindings = <
                &kp C_BRI_DN &kp C_BRI_UP &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE &none      &none      &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &kp C_PWR
                &kp MINUS    &kp FSLH     &trans       &kp PRCNT    &kp PIPE   &none      &none      &kp GT       &kp RPAR     &kp RBRC   &kp RBKT     &trans
                &kp TILDE    &trans       &trans       &trans       &kp HASH   &trans     &trans     &trans       &kp AT       &trans     &trans       &trans
                &trans       &trans       &trans       &trans       &trans     &none      &none      &trans       &trans       &trans     &trans       &trans
            >;
        };

    };
};
